name: Playwright Browser Tests
run-name: ${{ github.workflow }} @ ${{ github.ref_name }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    branches: [master]
    types: [checks_requested]
  workflow_dispatch:

concurrency:
  # Only cancel in-progress runs if the branches are other than master
  # All commits pushed to master must be validated
    group: ${{ github.workflow }}-${{ github.ref_name == 'master' && github.run_id || github.event.pull_request.number || github.ref_name }}
    cancel-in-progress: true


permissions:
  contents: write

jobs:
  # build:
    # not needed
  test:
    name: Test
    # needs: build  # not needed
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2]
    env:
      PLAYWRIGHT_SHARD: ${{ matrix.shard }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      # - name: Download
      #   uses: actions/download-artifact@v4
      #   with: { name: build }

      - name: Cache
        uses: actions/cache@v4
        with:
          key: build${{ hashFiles('yarn.lock', '_03Typescript_Playwright/yarn.lock')}}
          restore-keys: |
            build${{ hashFiles('yarn.lock', '_03Typescript_Playwright/yarn.lock')}}
            build
          path: |
            ~/.m2/repository
            ~/.cache
            ~/.yarn

      # - name: Untar
      #   run: make unpackage-build

      # - name: Run
      #   run: make _03Typescript_Playwright

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install Dependencies
        working-directory: _03Typescript_Playwright
        run: npm install

      - name: 📦 Install Allure Playwright Reporter
        working-directory: _03Typescript_Playwright
        run: npm install --save-dev allure-playwright

      - name: 🛠️ Install Playwright
        working-directory: _03Typescript_Playwright
        run: npx playwright install --with-deps

      - name: ▶️ Run Playwright Tests
        working-directory: _03Typescript_Playwright
        run: npx playwright test || true

      - name: Upload Report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-blob-report-${{ matrix.shard }}
          path: playwright/blob-report/
          retention-days: 1

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: _03Typescript_Playwright/allure-results/
          retention-days: 1
        
  merge-reports:
    name: Merge-Reports
    if: success() || failure()
    needs: test
    runs-on: main

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Reports
        if: ${{ contains(join(needs.*.result, ','), 'failure')}}
        uses: actions/download-artifact@v4
        with:
          path: playwright/blob-report/
          pattern: playwright-blob-report-*
          merge-multiple: true

      - name: Download Alure Results
        uses: actions/download-artifact@v4
        with:
          path: _03Typescript_Playwright/allure-results/
          pattern: allure-results-*
          merge-multiple: true

      - name: Run
        if: ${{ contains(join(needs.*.result, ','), 'failure')}}
        run: make playwright-merge-reports

      - name: Upload Report
        if: ${{ contains(join(needs.*.result, ','), 'failure')}}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-attempt-${{ github.run_attempt }}
          path: _03Typescript_Playwright/playwright-report
          retention-days: 3

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./_03Typescript_Playwright/allure-results/
          retention-days: 10

  generate-allure-report:
    env:
      ENVIRONMENT: inpostor
    
    defaults:
      run:
        working-directory: ./_03Typescript_Playwright
    if:
      success() || failure()
    needs: test
    runs-on: main

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install allure dep
        run: yarn
      
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./_03Typescript_Playwright/allure-results/

      - name: Set timestamp
        id: time-stamp-id
        run: echo "timestamp=$(date --utc +%Y%m%d-%H%M%SZ)" >> "$GITHUB_OUTPUT"

      # - name: Generate, upload and write URL




      # ✅ DEBUG: Verifică dacă allure-results există
      # - name: 🕵️ Check if allure-results exists
      #   working-directory: ./_03Typescript_Playwright
      #   run: ls -R allure-results || echo "⚠️ Folderul allure-results NU există!"

      # - name: 📊 Install and Generate Allure Report
      #   working-directory: ./_03Typescript_Playwright
      #   run: |
      #     npm install -g allure-commandline@2.24.0
      #     mkdir -p allure-report
      #     allure generate allure-results -o allure-report --clean || echo "⚠️ EROARE: Nu există fișiere în allure-results!"

      # # ✅ DEBUG: Verifică dacă allure-report s-a generat corect
      # - name: 🕵️ Debug Allure Report
      #   working-directory: ./_03Typescript_Playwright
      #   run: ls -R allure-report || echo "⚠️ Folderul allure-report este gol!"

      # - name: 🕵️ Debug Paths Before Deploy
      #   working-directory: ./_03Typescript_Playwright
      #   run: |
      #     echo "🔍 PWD:" $(pwd)
      #     echo "🔍 HOME:" $HOME
      #     echo "🔍 List allure-report:"
      #     ls -la allure-report || echo "⚠️ Folderul allure-report NU există!"

#      - name: 📂 Ensure Publish Directory Exists
#        run: mkdir -p ${{ github.workspace }}/actions_github_pages
#
#      - name: 🚚 Copy Allure Report for Deployment
#        run: |
#          mkdir -p actions_github_pages
#          cp -r _03Typescript_Playwright/allure-report/* ${{ github.workspace }}/actions_github_pages
#
#
#      - name: 📂 Debug Publishing Directory  -----------
#        run: ls -la ${{ github.workspace }}/actions_github_pages || echo "⚠️ Folderul nu există!"
#
#      - name: 📂 Verifică ce fișiere sunt copiate
#        run: ls -la _03Typescript_Playwright/allure-report
#
#      - name: 📂 Verifică conținutul final al folderului pentru deploy
#        run: ls -la /home/runner/work/UltimateLearningProject/UltimateLearningProject/actions_github_pages


      - name: 🚀 Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.ACTIONS_ACCESS_TOKEN }}
          publish_dir: _03Typescript_Playwright/allure-report
          keep_files: true
          publish_branch: gh-pages

      - name: 🔗 Print Allure Report URL
        run: |
          echo "🔗 Allure Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_id }}/"
